import { useState, useEffect } from "react";
import {
  LineChart,
  Line,
  CartesianGrid,
  XAxis,
  YAxis,
  ResponsiveContainer,
  Tooltip,
  Legend,
} from "recharts";
import "./App.css";

// const DFT = [
//   -0.2095174825908468,
//   0.6908591788115448,
//   1.618626564830832,
//   2.7047594334537823,
//   4.194699533795941,
//   6.737026577543799,
//   13.080202992383713,
//   78.11032431228989,
//   -21.300208562567953,
//   -9.587903691009586,
//   -6.333411072114802,
//   -4.947985775165701,
//   -4.46504788694539,
//   -5.033304110536065,
//   -11.615734675888811,
//   5.949878261077097,
//   1.54975086399977,
//   0.5920780774657837,
//   0.04928310232726463,
//   -0.5864326322432207,
//   -1.8973418007635532,
//   -7.45856442790044,
//   17.52903294217234,
//   6.148244833081627,
//   4.460700780521039,
//   3.8364411639739533,
//   3.5457128108450364,
//   3.4022172753865636,
//   3.336675695068469,
//   3.317521335937922,
//   3.3284139867894087,
//   3.360139029465969,
//   3.4071881879008186,
//   3.4661433957959726,
//   3.5348455558870464,
//   3.611938636822633,
//   3.696607346919677,
//   3.788421229744781,
//   3.8872407586106523,
//   3.993161719396026,
//   4.106484869126449,
//   4.227703749778894,
//   4.357507048834041,
//   4.496794245506566,
//   4.64670514705498,
//   4.808665761756837,
//   4.984455194758417,
//   5.176301418940378,
//   5.387018702069054,
//   5.620207647659228,
//   5.880553082185867,
//   6.174281196631809,
//   6.50988793695581,
//   6.899354462853966,
//   7.360294295606311,
//   7.920026407239255,
//   8.624038696080449,
//   9.555824610642778,
//   10.891845076579852,
//   13.097565453692482,
//   18.02140406008174,
//   51.88485273031056,
//   -8.416403516173773,
//   3.6959560402390736,
//   8.403768725561608,
//   12.655957873250525,
//   18.673211596116083,
//   31.328224160543982,
//   91.32867419614132,
//   -91.49869251393716,
//   -28.613017402198007,
//   -15.987802756354528,
//   -10.419908812947437,
//   -7.152983058638347,
//   -4.804589372077925,
//   -2.2633796222632907,
//   -7.408460645152317,
//   -2.8671765916062752,
//   -1.5507627778985873,
//   -0.5311748974513367,
//   0.4803412240396231,
//   1.7653704070441028,
//   4.478191460419961,
//   -53.84776648491188,
//   -2.066084280878596,
//   0.3448608770293743,
//   1.7780952370971164,
//   3.2259739525962092,
//   5.305419939259925,
//   10.026646417010184,
//   74.56315164350178,
//   -9.680314872915188,
//   -2.5327816831398353,
//   0.3892528696722106,
//   2.809859079588595,
//   6.003386886845786,
//   12.77148250252613,
//   55.544901404715375,
//   -32.54672279747903,
//   -13.640866949398534,
//   -8.987795204240877,
//   -6.974357593669461,
//   -6.07577676049528,
//   -6.197816744910277,
//   -10.278769795726957,
//   7.161535270825928,
//   0.9964688776103492,
//   0.166519127451771,
//   -0.024495357738118617,
//   -0.030386408728170333,
//   0.03419850753710807,
//   0.1288185051857963,
//   0.23653852277657994,
//   0.3495493074721492,
//   0.46407176944493966,
//   0.5782697181240636,
//   0.6913036601372324,
//   0.8028690772011564,
//   0.912958618516889,
//   1.0217348551137337,
//   1.129460612775436,
//   1.236460662654765,
//   1.3431011925266292,
//   1.449779781617912,
//   1.5569218915373726,
//   1.6649816817082514,
//   1.7744459856267887,
//   1.8858409103745062,
//   1.9997409411549418,
//   2.11678075542663,
//   2.2376702481159256,
//   2.3632135957908553,
//   2.494333599136377,
//   2.6321031085989217,
//   2.7777861576485936,
//   2.932892663686695,
//   3.0992524749048176,
//   3.279117605591179,
//   3.4753065483187773,
//   3.6914131393493586,
//   3.932117617826246,
//   4.203665454256614,
//   4.514633563045562,
//   4.877214217454452,
//   5.309489786735442,
//   5.839749937405013,
//   6.515431054256498,
//   7.42386650281801,
//   8.7486631019385,
//   10.963372645234404,
//   15.828415005885017,
//   40.98372494791556,
//   -21.518677110990442,
//   -2.85318539855734,
//   2.2843979384849087,
//   5.870164741737409,
//   10.045023059323455,
//   17.6075134103027,
//   45.80971406317234,
//   -83.07393476582789,
//   -20.12869776114897,
//   -10.055828825021615,
//   -5.260764397930455,
//   -1.5942479620650056,
//   2.9111212038757133,
//   14.2399543015244,
//   -122.14414970840775,
//   -18.129086503255884,
//   -10.825386024700824,
//   -7.8594271573577235,
//   -6.024069135760835,
//   -4.434559319799106,
//   -1.9974136030472152,
//   50.304777192956934,
//   -8.93083084338532,
//   -6.475463670127674,
//   -5.5620765429460235,
//   -5.039407807219238,
//   -4.656304389005535,
//   -4.206018185257043,
//   -1.572581479755253,
//   -6.283734618339656,
//   -5.709405951453877,
//   -5.833322311519838,
//   -6.279094364610232,
//   -7.162714801353101,
//   -9.117650889483356,
//   -17.963553231902033,
//   5.9690778659139845,
//   -2.9676459767085834,
//   -6.004020051352171,
//   -8.95927149862889,
//   -13.375175520095702,
//   -22.52920760062904,
//   -57.338720481386375,
//   140.39054227944303,
//   33.65187465726819,
//   19.794593049719154,
//   14.3629804464312,
//   11.482092650037343,
//   9.71045770420354,
//   8.521314578667564,
//   7.676248115436891,
//   7.051594566386591,
//   6.576814657099485,
//   6.208747547902234,
//   5.9195247006241685,
//   5.690373558582028,
//   5.5082135079355705,
//   5.3636787902243475,
//   5.249916561281055,
//   5.161828011903957,
//   5.095573966287175,
//   5.048244462945845,
//   5.017633567412025,
//   5.0020839775661745,
//   5.000379532510966,
//   5.011671936604367,
//   5.035433213719873,
//   5.071428936408835,
//   5.1197099423547066,
//   5.180622639797588,
//   5.254840667553663,
//   5.343424349352167,
//   5.447920337549467,
//   5.57052464226879,
//   5.714353630518657,
//   5.883913591704624,
//   6.085967907913698,
//   6.331285978049932,
//   6.638619243124409,
//   7.04538381538936,
//   7.644491178174034,
//   8.779799829845535,
//   14.400065884811106,
//   3.544337837308269,
//   6.744587388576811,
//   8.222770683914463,
//   9.766201371849661,
//   12.033119473821674,
//   16.614819295369657,
//   35.51489112233201,
//   -32.94323353650183,
//   -4.001953492053244,
//   1.9565772336078395,
//   5.573557375779002,
//   9.353902504866248,
//   15.622313722110015,
//   35.57394858327679,
//   -128.91707760927957,
//   -20.9381312456666,
//   -10.373802634447085,
//   -6.213558981051737,
//   -3.895872364796337,
//   -2.3500674153224788,
//   -1.1840811284671526
// ]

function W(p, k, N) {
  return (
    Math.cos(((2 * Math.PI) / N) * (p * k)) -
    Math.sin(((2 * Math.PI) / N) * (p * k))
  );
}

function Wp(p, N) {
  return Math.cos(((2 * Math.PI) / N) * p) - Math.sin(((2 * Math.PI) / N) * p);
}

function FFT(samples) {
  const N = samples.length;
  if (N <= 1) {
    return samples;
  }
  let even = [];
  let odd = [];
  for (let i = 0; i < N / 2; i++) {
    even[i] = samples[2 * i];
    odd[i] = samples[2 * i + 1];
  }
  const F = [];
  for (let p = 0; p < N / 2; p++) {
    let Feven = 0;
    let Fodd = 0;
    for (let k = 0; k < N / 2; k++) {
      Feven += even[k] * W(p, k, N / 2);
    }
    for (let k = 0; k < N / 2; k++) {
      Fodd += odd[k] * W(p, k, N / 2);
    }
    F[p] = Fodd + Wp(p, N) * Feven;
    F[p + N / 2] = Fodd - Wp(p, N) * Feven;
  }
  return F;
}

function generateChart(harmonics, frequencyBorder, ticks) {
  const results = [];
  const x = [];
  const data = [];
  const a = [
    0.4339828585740546,
    0.7913122899825349,
    0.9046675274492586,
    0.03561605703191084,
    0.6945208754805292,
    0.31068813398293105,
    0.8019743203386724,
    0.28475103254141687,
    0.12064273435943562,
    0.9330672886468734,
  ];
  const phi = [
    0.22630164484429782,
    0.209250913297216,
    0.4181397442964869,
    0.7283513419958436,
    0.9143343248574061,
    0.29136587444048345,
    0.6230305731180181,
    0.7151092751757229,
    0.053674000231757946,
    0.14700253263682495,
  ];
  for (let i = 0; i < harmonics; i++) {
    const w = (frequencyBorder / harmonics) * (i + 1);
    const harmonic = [];
    for (let t = 0; t < ticks; t++) {
      harmonic.push(a[i] * Math.sin(w * t + phi[i]));
    }
    results.push(harmonic);
  }
  for (let t = 0; t < ticks; t++) {
    let sum = 0;
    for (const array of results) {
      sum += array[t];
    }
    x.push(sum);
  }
  const F = FFT(x);
  for (const p in F) {
    data.push({
      p,
      'F(p)': F[p],
    });
  }
  return data;
}

function App() {
  const [data, setData] = useState(null);
  useEffect(() => {
    setData(generateChart(10, 900, 256));
  }, []);
  return (
    <div className="App">
      {data && (
        <div className="chart">
          <ResponsiveContainer width="100%" height="95%">
            <LineChart
              data={data}
              margin={{ right: 65, top: 5, bottom: 5, left: 5 }}
            >
              <CartesianGrid stroke="#ccc" />
              <Line
                type="monotone"
                dataKey="F(p)"
                stroke="#4285F4"
                fill="#4285F4"
                strokeWidth={2}
              />
              <XAxis dataKey="p" />
              <YAxis dataKey="F(p)" />
              <Tooltip />
              <Legend />
            </LineChart>
          </ResponsiveContainer>
        </div>
      )}
    </div>
  );
}

export default App;
